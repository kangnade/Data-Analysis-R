head(dt[,c("pe","pe_1","")], n=10)
head(dt[,c("pe","pe_1","pe_2","pe_3")], n=10)
tail(dt[,c("pe","pe_1","pe_2","pe_3")], n=10)
head(dt[,c("year","pe","pe_1","pe_2","pe_3")], n=10)
tail(dt[,c("year","pe","pe_1","pe_2","pe_3")], n=10)
plot(dt$ww2, type = "b")
plot(dt$ww2 ~ dt$year, type = "b")
plot(dt$ww2 ~ dt$year, type = "b", xlab="Year", ylab="WW2")
model5 <- lm(gfr ~ year, data = dt)
summary(model5)
plot(gfr ~ year, data = dt, type = "b")
lines(model5$fitted.values)
plot(gfr ~ year, data = dt, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 5 Fertility on Years")
plot(dt$gfr, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 5 Fertility on Years")
lines(model5$fitted.values)
model6 <- lm(gfr ~ year + ww2 + pill, data=dt)
summary(model6)
model6 <- lm(gfr ~ year + ww2 + pill, data=dt)
summary(model6)
plot(dt$gfr, type = "b")
lines(model6$fitted.values)
plot(dt$gfr, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 5 Fertility on Years")
lines(model6$fitted.values)
plot(dt$gfr, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 6 Fertility on Years")
lines(model6$fitted.values)
model7 <- lm(gfr ~ year + ww2 + pill + pe + pe_1 + pe_2, data=dt)
summary(model7)
plot(dt$gfr, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 7 Fertility on Years")
lines(model7$fitted.values)
anova(model6, model7) # F-test for pe, pe_1, and pe_2
model6_fix <- lm(gfr ~ year + ww2 + pill, data=dt[-c(1,2),])
summary(model6_fix)
plot(dt$gfr, type = "b", xlab = "Year", ylab = "General Fertility Rate", main = "Model 6_fix Fertility on Years")
lines(model6_fix$fitted.values)
anova(model6_fix, model7)
library(car)
library(car)
linearHypothesis(model7, c("pe","pe_1"."pe_2"))
linearHypothesis(model7, c("pe","pe_1","pe_2"))
okun2 <- read.csv("okun2.csv", sep = ";")
library(readr)
automobile_market <- read_csv("C:/Users/nade/Desktop/Intro Econometrics/Excel Data/automobile_market.csv")
View(automobile_market)
library(readr)
labour_market <- read_csv("C:/Users/nade/Desktop/Intro Econometrics/Excel Data/labour_market.csv")
View(labour_market)
at <- automobile_market
1990-1975
15*12
180+10
1/12
0.08333333*10
at$year <- seq(from=1975, to=1991.83333, by=0.083333)
at$year <- seq(from=1975.083333, to=1991.83333, by=0.083333)
head(at)
View(at)
at$month <- 1:12
at$month <- 1:12[-2]
View(at)
at$month <- seq(1:12,length.out = 202)
at$month <- 1:12
View(at)
help("seq")
help("repeated number")
help("month dummy")
help("repeat number")
help("seq_len")
at$month <- 1:12
automobile_market$month <- 1:12
at$month <- 1:12
dur <- read.csv("http://nb.vse.cz/~zouharj/econ/durgoods.csv")
dur$year <- seq(from=1978, to=1985.75, by=0.25)
at$month <- 1:12
help("seq_along")
at$month <- 1:12
at$month1 <- 1:12
help("rep")
at$month <- rep(1:12,202)
at$month <- rep(1:12)
at$month <- rep(1:12, length.out=202)
head(at)
View(at)
View(at)
model1 <- lm(log(carexp)~year + month, data = at)
summary(model1)
help(bgtest)
check1 <- lm(log(carexp)~year, data=at)
summary(check1)
model1 <- lm(log(carexp)~year + month, data = at)
summary(model1)
model2 <- lm(log(carexp)~month, data=at)
summary(model2)
anova(model1,model2)
model1 <- lm(log(carexp)~year + month, data = at)
summary(model1)
plot(at$carexp~at$year, type="b")
model3 <- lm(log(carexp)~year, data=at)
summary(model3)
anova(model1, model3)
library(car)
linearHypothesis(model1, "year")
linearHypothesis(model1, "month")
lag <- function(series){
n <- length(series)
lagged_series <- c(NA, series[-n])
return(lagged_series)
}
n <- nrow(at)
at$unemp_lag1 <- c(NA, at$unemp[-n])
at$unemp_lag2 <- c(NA, at$at$unemp_lag1[-n])
lag <- function(series){
n <- length(series)
lagged_series <- c(NA, series[-n])
return(lagged_series)
}
n <- nrow(at)
at$unemp_lag1 <- c(NA, at$unemp[-n])
at$unemp_lag2 <- c(NA, at$at$unemp_lag1[-n])
View(at)
lag <- function(series){
n <- length(series)
lagged_series <- c(NA, series[-n])
return(lagged_series)
}
n <- nrow(at)
at$unemp_lag1 <- c(NA, at$unemp[-n])
at$unemp_lag2 <- c(NA, at$unemp_lag1[-n])
View(at)
lm(log(carexp)~unemp + unemp_lag1 + unemp_lag2 + year, data=at)
q1d <- lm(log(carexp)~unemp + unemp_lag1 + unemp_lag2 + year, data=at)
summary(q1d)
options(scipen = 5)
q1d <- lm(log(carexp)~unemp + unemp_lag1 + unemp_lag2 + year, data=at)
summary(q1d)
exp(q1d$coefficients)
exp(q1d$coefficients)-1
at$carexp_adjusted <- model1$residuals
q1e <- lm(log(carexp_adjusted)~unemp + unemp_lag1 + unemp_lag2 + year, data=at)
summary(q1e)
q1f<-lm(unemp~unemp_lag1,data=at)
summary(q1f)
library(orcutt)
model_CO <- cochrane.orcutt(q1e)
summary(model_CO)
confint(model_CO$coefficients)
confint(model_CO)
help("orcutt")
help("cochrane.orcutt")
help("confint")
confint(model_CO,vcov(model_CO))
confint(model_CO)
confint(model_CO)["(unemp)",]
confint(model_CO)
model_CO <- cochrane.orcutt(q1e)
summary(model_CO)
exp(model_CO$coefficients)-1
0.139232-1.96*0.248314
0.139232+1.96*0.248314
q1e <- lm(log(carexp_adjusted)~unemp + unemp_lag1 + unemp_lag2 + year, data=at)
summary(q1e)
model_CO <- cochrane.orcutt(q1e)
summary(model_CO)
lm(log(carexp)~year,data=at)
q1j <- lm(log(carexp)~year,data=at)
summary(q1j)
at$lced <- q1j$residuals
View(at)
at$lced_lag1 <- c(NA, at$lced[-n])
head(at)
lm(lced~lced_lag1,data=at)
q1k <- lm(lced~lced_lag1,data=at)
summary(q1k)
confint(q1k)
lmar <- labour_market
modelQ3 <- lm(wage ~ ., data=lmar)
summary(modelQ3)
library(lmtest)
library(sandwich)
bptest(modelQ3)
vcov_robust <- vcovHC(modelQ3)
vcov_robust
stdErr_robust <- sqrt(diag(vcov_robust))
stdErr_robust
#Calculate the conventional standard error
#Just delete the HC in the vcovHC, so to get the conventional standarrd errors
vcov_conventional <- vcov(modelQ3)
stdErr_conventional <- sqrt(diag(vcov_conventional))
rbind(stdErr_conventional, stdErr_robust)
# Ways to display results with std errors
coeftest(modelQ3, vcov = vcov_robust)
# To see the confidence invertals
# 95% CI based on robust std. errors
confint(modelQ3, vcov = vcov_robust)
library(stargazer)
stargazer(
modelQ3, modelQ3, se = list(NULL, stdErr_robust), type = "text"
)
modelQ3 <- lm(wage ~ ., data=lmar)
summary(modelQ3)
help("one-tail")
help("hypothesis")
help(normal distribution)
0.02554*2
lmar$femaleXmarried <- lmar$female*lmar$married
model3b <- lm(wage~.,data=lmar)
summary(model3b)
bgtest(model3b)
confint(model3b)
linearHypothesis(model1, "femaleXmarried=0")
c(18,0,1,0,0,1,0,0)*model3b$coefficients
c(1,18,0,1,0,0,1,0,0)*model3b$coefficients
sum(1,18,0,1,0,0,1,0,0)*coef(model3b))
sum(18,0,1,0,0,1,0,0)*coef(model3b))
sum(c(18,0,1,0,0,1,0,0)*coef(model3b))
sum(c(1,18,0,1,0,0,1,0,0)*coef(model3b))
sum(c(1,18,0,1,0,0,1,0,0)*coef(model3b))
-20.7526029+18*1.7411167+1.8864791+1.9940948
-20.7526029+18*1.7411167+1.8864791+1.9940948
sum(-20.7526029+18*1.7411167+1.8864791+1.9940948)
library(dplyr)
library(ggplot2)
```{r, echo=FALSE}
```{r, echo=FALSE}
library(purrr)
# install.packages("tidyverse")
setwd("C:/Users/nade/Desktop/Data Analysis R")
### LOAD PACKAGE ###
library(tidyverse)
mpg_reorder_boxplot <- ggplot(data = mpg, mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
geom_boxplot(mapping = aes(color = class)) +
ggtitle(expression(atop("Cars Highway Miles Per Gallon", "by Various Classes"))) +
xlab("Class") +
ylab("Highway Miles Per Gallon") +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 10),
title = element_text(size = 14))
mpg_reorder_boxplot
mpg_reorder_boxplot <- ggplot(data = mpg, mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
geom_boxplot(mapping = aes(color = class)) +
ggtitle(expression(atop("Cars Highway Miles Per Gallon", "by Various Classes"))) +
xlab("Class") +
ylab("Highway Miles Per Gallon") +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 10),
title = element_text(size = 14))
png("r_wickham/figures/chapter5/r_for_data_science_wickham_textbook_mpg_reorder_class_boxplot.png")
mpg_reorder_boxplot
pdf("r_wickham/figures/chapter5/r_for_data_science_wickham_textbook_mpg_reorder_class_boxplot.pdf")
mpg_reorder_boxplot
dev.off()
mpg_reorder_flip_boxplot <- ggplot(data = mpg, mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
geom_boxplot(mapping = aes(color = class)) +
ggtitle(expression(atop("Cars Highway Miles Per Gallon", "by Various Classes"))) +
ylab("Class, reordered") +
xlab("Highway Miles Per Gallon") +
coord_flip() +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 10),
title = element_text(size = 14))
mpg_reorder_flip_boxplot
mpg_reorder_flip_boxplot <- ggplot(data = mpg, mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
geom_boxplot(mapping = aes(color = class)) +
ggtitle(expression(atop("Cars Highway Miles Per Gallon", "by Various Classes"))) +
ylab("Class, reordered") +
xlab("Highway Miles Per Gallon") +
coord_flip() +
theme(plot.title = element_text(hjust = 0.5), text = element_text(size = 10),
title = element_text(size = 14))
png("r_wickham/figures/chapter5/r_for_data_science_wickham_textbook_mpg_reorder_flip_class_boxplot.png")
mpg_reorder_flip_boxplot
pdf("r_wickham/figures/chapter5/r_for_data_science_wickham_textbook_mpg_reorder_flip_class_boxplot.pdf")
mpg_reorder_flip_boxplot
dev.off()
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
diamonds %>%
count(color, cut)
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price),
alpha = 1/100)
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller) +
geom_bin2d(mapping = aes(x = carat, y = price))
install.packages("hexbin")
library(hexbin)
ggplot(data = smaller) +
geom_hex(mapping = aes(x = carat, y = price))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)), varwidth = TRUE)
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
library(modelr)
mod <- lm(log(price) ~ log(carat), data =diamonds)
diamonds2 <- diamonds %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
ggplot(data = diamonds2) +
geom_point(mapping = aes(x = carat, y = resid))
ggplot(data = diamonds2) +
geom_boxplot(mapping = aes(x = cut, y = resid))
library(tidyverse)
as_tibble(iris)
tibble(
x = 1:5,
y = 1,
z = x^3 + y
)
tb <- tibble(
':)' = "smile",
':(' = "sad",
'World Cup' = "string"
)
tb
tribble(
~x, ~y, ~z,
#==/--/----
"a", 2, 3.6,
"b", 1, 8.5
)
tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
atb <- tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
)
tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
)
nycflights13::flights %>%
print(n = 10, width = Inf)
nycflights13::flights %>%
View()
df <- tibble(
x = runif(5),
y = rnorm(5)
)
df
df$x
df[["x"]]
df[[1]]
df %>% .$x
df %>% .[["x"]]
print(mtcars)
df <- data.frame(abc = 1, xyz = "a")
df$x
df[,"xyz"]
df[, c("abc", "xyz")]
annoying <- tibble('1' = 1:10,
'2' = '1' * 2 + rnorm(length('1')))
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
annoying
tb <- tibble(
':)' = "smile",
':(' = "sad",
'World Cup' = "string"
)
tb
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
annoying
annoying$`1`
annoying[["'1"]]
annoying[["'1'"]]
annoying[['1']]
annoying %>% .$'1'
annoying %>% .[['1']]
ggplot(data = annoying) +
geom_point(mapping = aes(x = '1', y = '2'))
ggplot(data = annoying) +
geom_point(mapping = aes(x = `1`, y = `2`))
annoying %>%
mutate(`3` = `2` / `1`)
?package:tibble
?rename
rename(annoying, c(`1` = "one"))
rename(annoying, c("`1`" = "one"))
rename(annoying, c("`1`", "one"))
rename(annoying, "`1`"= "one")
rename(annoying, `1`= "one")
rename(annoying, `1`= one)
rename(annoying, `1` = one)
rename(annoying, 1 = one)
rename(annoying, '1' = one)
rename(annoying, one = `1`)
annoying[[`1`]]
annoying[['1']]
annoying %>% .$`1`
annoying %>% .[[`1`]]
annoying %>% .[['1']]
annoying %>%
mutate(`3` = `2` / `1`)
rename(annoying, two = `2`)
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
annoying
annoying %>%
mutate(`3` = `2` / `1`)
rename(annoying, one = `1`, two = `2`, three = `3`)
new_annoying <- annoying %>%
mutate(`3` = `2` / `1`)
rename(new_annoying, one = `1`, two = `2`, three = `3`)
?tibble::enframe
enframe(1:3)
enframe(c(a = 5, b = 7))
?tibble
?options
?tibble.width
?tibble
?tidyverse::tibble
?tidyverse
library(tidyverse)
?read_csv
?read_fwf
?read_delim
parse_double("1.23")
parse_double("1,23", locale = local(decimal_mark = ","))
parse_double("1,23", locale = locale(decimal_mark = ","))
parse_number("$100")
parse_number("20%")
parse_number("it costs $2000")
parse_number("$123.456.789")
parse_number("$123,456,789")
parse_number(
"123.456.789",
locale = locale(grouping_mark = ".")
)
parse_number(
"123'456'789",
locale = locale(grouping_mark = "'")
parse_number(
"123'456'789",
locale = locale(grouping_mark = "'")
)
parse_number(
"123'456'789",
locale = locale(grouping_mark = "'")
)
charToRaw("Nade")
x1 <- "El Ni\xf1o was particularly bad this year"
x2 <- "\x82\xb1\x82\xf1\x82\xc9\x82\xbf\x82\xcd"
x1
x2
parse_character(x1, locale = locale(encoding = "Latin1"))
parse_character(x2, locale = locale(encoding = "Shift-JIS"))
guess_encoding(charToRaw(x1))
guess_encoding(charToRaw(x2))
parse_character(x2, locale = locale(encoding = "KOI8-R"))
fruit <- c("apple", "banana")
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
parse_datetime("2010-10-01T2010")
parse_datetime("20101001")
parse_date("2010-10-01")
library(hms)
parse_time("01:10 am")
parse_time("20:10:01")
parse_date("01/02/15", "%m/%d/%y")
parse_date("01-02-15", "%d/%m/%y")
parse_date("01-02-15", "%d/%m/%y")
parse_date("01-02-15", "%d/%m/%y")
parse_date("01/02/15", "%d/%m/%y")
parse_date("01/02/15", "%y/%m/%d")
parse_date("1 janvier 2015", "%d %B %Y", locale = locale("fr"))
?locale
parse_number(
"123'456'789",
locale = locale(decimal_mark = ".", grouping_mark = "'")
) # Expected: 123456789
parse_number(
"123'456'789",
locale = locale(decimal_mark = "'", grouping_mark = "'")
) # Expected: 123456789
parse_number(
"123,456,789",
locale = locale(decimal_mark = ",")
)
parse_number(
"123.456.789",
locale = locale(decimal_mark = ",")
)
str(parse_guess("01/02/2013", locale = locale(date_format = "%d/%m/%Y")))
parse_date("01/02/2013", locale = locale(date_format = "%d/%m/%Y"))
?cn
parse_date("1月26日2015年", "%B%d%Y", locale = locale("cn"))
parse_date("1月26日2015年", "%B%d%Y", locale = locale("cn-zh"))
parse_date("1月26日2015年", "%B%d%Y", locale = locale("zh"))
parse_date("一月 二十六日 二零一五年", "%B %d %Y", locale = locale("zh"))
locale("zh")
parse_date("一月 26 2015", "%B %d %Y", locale = locale("zh"))
?readr
?read_csv
